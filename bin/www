#!/usr/bin/env node
var debug = require('debug')('gazzetta');
var app = require('../app');
var config = require('../config.js');
var model = require('../models.js');

if (app.get('env') === 'production') {
  app.set('host', config.production.host);
  app.set('port', config.production.port);
} else {
  app.set('host', config.dev.host);
  app.set('port', config.dev.port);
}

var server = app.listen(app.get('port'), app.get('host'), function() {
  debug('Express server listening on port ' + server.address().port);
});

var Player = model.Player;
var Rating = model.Rating;
var Opinion = model.Opinion;
var io = require('socket.io')(server);

var groupId = 1;
io.on('connection', function(socket) {

  emitBaseInfo(socket);

  socket.on('post rating', function(data) {
    updateRating(data);
  });

  socket.on('post mom', function(data) {

  });

  socket.on('post summary', function(data) {

  });

});

function emitBaseInfo(socket) {
  Player.find({ group: groupId }).exec(function(err, items) {
    socket.emit('login', { players: items });
  });
}

function updateRating(data) {
  var id = data.id;
  var formatedRating = parseFloat(data.rating);
  var opinion = data.opinion;
  Rating.findOne({ id: data.id }, function(err, rating) {
    if (rating === null) {
      var newRecord = new Rating({id: id, sum: formatedRating, num: 1});
      newRecord.save(function(err) {

      });
    } else {
      rating.num = rating.num + 1;
      rating.sum = rating.sum + formatedRating;
      rating.save();
    }
    if (opinion.length) {
      var newOpinion = new Opinion({ id: id, opinion: opinion, createdAt: getUnixTime() });
      newOpinion.save(function(err) {

      });
    }
  });
}

function getUnixTime() {
   return parseInt((new Date)/1000);
}
